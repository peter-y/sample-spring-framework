<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:c="http://www.springframework.org/schema/c"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
        p:usePool="true" p:hostName="${redis.host}" p:password="${redis.password}" p:database="${redis.database}" c:poolConfig-ref="redisPoolConfig"/>
    <bean id="redisStringSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    <!-- 线程安全的 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
        p:connectionFactory-ref="jedisConnectionFactory" p:defaultSerializer-ref="redisStringSerializer"/>



    <bean id="cacheWriter" class="org.springframework.data.redis.cache.DefaultRedisCacheWriter" factory-method="lockingRedisCacheWriter">
        <constructor-arg name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>
    <bean id="cacheConfig" class="org.springframework.data.redis.cache.RedisCacheConfiguration" factory-method="defaultCacheConfig"/>
    <!--<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" c:cacheWriter-ref="cacheWriter"-->
    <!--c:defaultCacheConfiguration-ref="cacheConfig" />-->

    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean id="redisUtil" class="com.geolisa.support.redis.RedisUtil">
                    <property name="redisTemplate" ref="redisTemplate"/>
                    <property name="name" value="City"/>
                </bean>
            </set>
        </property>
    </bean>

    <!-- cache 的 注解扫描会默认 注册 cacheInterceptor,CacheInterceptor会依赖注入 cacheManager -->
    <cache:annotation-driven/>
</beans>