<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:c="http://www.springframework.org/schema/c"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- datasource -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url"
            value="jdbc:mysql://192.168.1.91:3306/youngdb?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true"/>
        <property name="username" value="root"/>
        <property name="password" value="1q2w3e4r5t"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="minIdle" value="3"/>
        <property name="initialSize" value="3"/>
        <property name="maxTotal" value="10"/>
        <property name="maxIdle" value="10"/>
    </bean>

    <!-- transactionManager -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- advisor -->
    <!-- 声明围绕txManager的advice(像拦截器) 定义代理的method方法 但是没有声明在哪些类中生效 所以需要AOP的切面-->
    <tx:advice id="interceptor" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="insert*"/>
            <tx:method name="update*"/>
        </tx:attributes>
    </tx:advice>

    <!--
    修饰模式? 返回类型模式 声明类型模式?名称模式(参数模式) 异常模式? 问号前面的模式都是可选
     execution(modifiers-pattern? ret-type-pattern declaring-type-pattern?name-pattern(param-pattern)
            throws-pattern?)
     -->
    <!-- aop -->
    <aop:config>
        <!-- 切入点，定义从哪些地方切入 -->
        <aop:pointcut id="pointcut" expression="execution(* com.ycz.spring.framework.sample.aoptx.service.*.*(..))"/>
        <!-- 声明切入代理者的身份，也就是把谁切进去 -->
        <aop:advisor advice-ref="interceptor" pointcut-ref="pointcut"/>
    </aop:config>

    <!-- 业务操作bean -->
    <bean id="fooService" class="com.ycz.spring.framework.sample.aoptx.service.DefaultFooService"/>

    <bean id="transactionOperations" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="txManager"/>
        <!-- 这里可以设置事务隔离级别，传播行为 超时等 -->
    </bean>

    <bean id="jdbcOperations" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="namedParameterJdbcOperations" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="simpleJdbcInsert" class="org.springframework.jdbc.core.simple.SimpleJdbcInsert" c:jdbcTemplate-ref="jdbcOperations"/>

    <bean id="simpleJdbcCall" class="org.springframework.jdbc.core.simple.SimpleJdbcCall" c:jdbcTemplate-ref="jdbcOperations"/>
</beans>